//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Properties.Strings", typeof(Strings).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Styles contains invalid values..
        /// </summary>
        internal static string Argument_InvalidDateTimeStyles {
            get {
                return ResourceManager.GetString("Argument_InvalidDateTimeStyles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object must be of type Date..
        /// </summary>
        internal static string Argument_MustBeDate {
            get {
                return ResourceManager.GetString("Argument_MustBeDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object must be of type Time..
        /// </summary>
        internal static string Argument_MustBeTime {
            get {
                return ResourceManager.GetString("Argument_MustBeTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Day number must be between Date.MinValue.DayNumber and Date.MaxValue.DayNumber..
        /// </summary>
        internal static string ArgumentOutOfRange_BadDayNumber {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_BadDayNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Months value must be between +/-120000..
        /// </summary>
        internal static string ArgumentOutOfRange_BadMonths {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_BadMonths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Year and Day parameters describe an un-representable Date..
        /// </summary>
        internal static string ArgumentOutOfRange_BadYearDay {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_BadYearDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Year, Month, and Day parameters describe an un-representable Date..
        /// </summary>
        internal static string ArgumentOutOfRange_BadYearMonthDay {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_BadYearMonthDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Years value must be between +/-10000..
        /// </summary>
        internal static string ArgumentOutOfRange_BadYears {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_BadYears", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The added or subtracted value results in an un-representable Date..
        /// </summary>
        internal static string ArgumentOutOfRange_DateArithmetic {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_DateArithmetic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hour must be between 0 and 23..
        /// </summary>
        internal static string ArgumentOutOfRange_Hour {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Hour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hour must be between 1 and 12..
        /// </summary>
        internal static string ArgumentOutOfRange_Hour12HF {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Hour12HF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Meridiem must be AM or PM..
        /// </summary>
        internal static string ArgumentOutOfRange_Meridiem {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Meridiem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Millisecond must be between 0 and 999..
        /// </summary>
        internal static string ArgumentOutOfRange_Millisecond {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Millisecond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minute must be between 0 and 59..
        /// </summary>
        internal static string ArgumentOutOfRange_Minute {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Minute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Month must be between 1 and 12..
        /// </summary>
        internal static string ArgumentOutOfRange_Month {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Month", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Second must be between 0 and 59..
        /// </summary>
        internal static string ArgumentOutOfRange_Second {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Second", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ticks must be between Time.MinValue.Ticks and Time.MaxValue.Ticks..
        /// </summary>
        internal static string ArgumentOutOfRange_TimeBadTicks {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_TimeBadTicks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Year must be between 1 and 9999..
        /// </summary>
        internal static string ArgumentOutOfRange_Year {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Year", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String was not recognized as a valid Date..
        /// </summary>
        internal static string Format_BadDate {
            get {
                return ResourceManager.GetString("Format_BadDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String was not recognized as a valid Time..
        /// </summary>
        internal static string Format_BadTime {
            get {
                return ResourceManager.GetString("Format_BadTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input string was not in a correct format..
        /// </summary>
        internal static string Format_InvalidString {
            get {
                return ResourceManager.GetString("Format_InvalidString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DateTime cannot be cast as Date because it has a non-zero time component..
        /// </summary>
        internal static string InvalidCast_BadDateTime {
            get {
                return ResourceManager.GetString("InvalidCast_BadDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TimeSpan cannot be cast as Time because it describes an un-representable Time..
        /// </summary>
        internal static string InvalidCast_BadTimeSpan {
            get {
                return ResourceManager.GetString("InvalidCast_BadTimeSpan", resourceCulture);
            }
        }
    }
}
